.\"create an efun socket
.DT
socket_create
Discworld driver help
socket_create

Name
.SI 5
socket_create() - create an efun socket

.EI
Synopsis
.SI 5
.EI
#include <socket.h>
#include <socket_errors.h>

int socket_create(int mode, string read_callback,
string|void close_callback)

Description
.SP 5 5
socket_create() creates an efun socket. mode determines which type of
socket is created. Currently supported socket modes are:

MUD - for sending LPC data types using TCP protocol.

STREAM - for sending raw data using TCP protocol.

DATAGRAM - for using UDP protocol.

The argument read_callback is the name of a function for the driver to
call when the socket gets data from its peer. The read callback should follow
this format:

void read_callback(int fd, mixed message)

Where fd is the socket which received the data, and message is the data
which was received.

The argument close_callback is the name of a function for the driver to
call if the socket closes unexpectedly, i.e. not as the result of a
socket_close(3) call. The close callback should follow this format:

void close_callback(int fd)

Where fd is the socket which has closed.
NOTE: close_callback is not used with DATAGRAM mode sockets.
.EP
Return values
.SI 5
socket_create() returns:
.EI
.TP
a non-negative descriptor on success.
.TP
a negative value indicated below on error.
Errors
.SI 5
.EI
.TP 15
EEMODENOTSUPP
Socket mode not supported.
.TP
EESOCKET
Problem creating socket.
.TP
EESETSOCKOPT
Problem with setsockopt.
.TP
EENONBLOCK
Problem setting non-blocking mode.
.TP
EENOSOCKS
No more available efun sockets.
.TP
EESECURITY
Security violation attempted.
See also
.SI 5
socket_accept(3), socket_bind(3), socket_close(3), socket_connect(3),
socket_listen(3), socket_write(3)
.EI
